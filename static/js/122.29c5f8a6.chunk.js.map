{"version":3,"file":"static/js/122.29c5f8a6.chunk.js","mappings":"mKAGe,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IA0CnC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UACpBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,UAASF,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACHC,EAAAA,EAAAA,KAAA,QAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMK,SA/CKC,UACnBC,EAAMC,iBACNV,EAAS,IAET,MAAMW,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAO,CACXC,KAAMJ,EAASK,IAAI,YACnBC,MAAON,EAASK,IAAI,SACpBE,SAAUP,EAASK,IAAI,aAGzB,IACE,MAAMG,QAAiBC,MACrB,iDACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUX,KAIzB,IAAKK,EAASO,GAAI,CAChB,MAAMC,QAAkBR,EAASS,OACjC,MAAM,IAAIC,MAAMF,EAAUG,SAAW,gBACvC,CAEA,MAAMC,QAAaZ,EAASS,OAC5BI,QAAQC,IAAI,kBAAmBF,GAE/BG,aAAaC,QAAQ,QAASJ,EAAKK,OACnCF,aAAaC,QAAQ,WAAYJ,EAAKjB,KAAKC,MAC3ClB,EAAS,IACX,CAAE,MAAOwC,GACPL,QAAQjC,MAAM,gBAAiBsC,GAC/BrC,EAASqC,EAAIP,QACf,GAUqC1B,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,WAAUlC,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOC,GAAG,WAAWzB,KAAK,WAAW0B,UAAQ,KACzDpC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,QAAOlC,SAAC,gBACvBC,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,QAAQC,GAAG,QAAQzB,KAAK,QAAQ0B,UAAQ,KACpDpC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,WAAUlC,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,WAAWC,GAAG,WAAWzB,KAAK,WAAW0B,UAAQ,KAC7DpC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAECN,IAASM,EAAAA,EAAAA,KAAA,KAAGqC,MAAO,CAAEC,MAAO,OAAQvC,SAAEL,KAEvCM,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASC,GAAG,SAAQpC,SAAC,gCAS5CC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,y/BAkEN,C","sources":["Signup.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport default function Signup() {\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(\"\");\n\n    const formData = new FormData(event.target);\n    const user = {\n      name: formData.get(\"username\"),\n      email: formData.get(\"email\"),\n      password: formData.get(\"password\"),\n    };\n\n    try {\n      const response = await fetch(\n        \"https://minor-project-kkof.onrender.com/users/\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(user),\n        },\n      );\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Signup failed\");\n      }\n\n      const data = await response.json();\n      console.log(\"Signup success:\", data);\n\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"username\", data.user.name); // Make sure the response includes this\n      navigate(\"/\");\n    } catch (err) {\n      console.error(\"Signup error:\", err);\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"outer\">\n        <div className=\"content\">\n          <h1>Signup</h1>\n          <p>It just takes 30 seconds</p>\n          <main>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"username\">UserName</label>\n              <input type=\"text\" id=\"username\" name=\"username\" required />\n              <br />\n              <br />\n\n              <label htmlFor=\"email\">Your Email</label>\n              <input type=\"email\" id=\"email\" name=\"email\" required />\n              <br />\n              <br />\n\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" name=\"password\" required />\n              <br />\n              <br />\n\n              {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n              <footer>\n                <button type=\"submit\" id=\"submit\">\n                  Create Account\n                </button>\n              </footer>\n            </form>\n          </main>\n        </div>\n      </div>\n\n      <style>\n        {`@import url('https://fonts.googleapis.com/css2?family=Lato&family=Roboto&display=swap');\n\nh1, body {\n  margin: 0;\n}\n\nlabel {\n  font-family: sans-serif;\n}\n\nh1 {\n  margin: 0;\n  font-size: 2.5rem;\n  color: rgba(11, 69, 186, 0.764);\n  text-align: center;\n  font-family: sans-serif;\n}\n\n.outer {\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.content {\n  border: 2px solid lightblue;\n  padding: 15px 40px 40px;\n  border-radius: 4px;\n}\n\n.content p {\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  color: rgba(61, 178, 190, 0.97);\n  text-align: center;\n  font-family: sans-serif;\n}\n\ninput, button#submit {\n  width: 250px;\n  padding: 5px;\n}\n\n#submit {\n  background-color: #236ae5d5;\n  box-sizing: content-box;\n  border: none;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n#submit:hover {\n  background-color: rgba(19, 100, 231, 0.882);\n}\n\nlabel {\n  display: block;\n  margin: 5px 0px;\n  font-weight: bold;\n}`}\n      </style>\n    </>\n  );\n}\n"],"names":["Signup","navigate","useNavigate","error","setError","useState","_jsxs","_Fragment","children","_jsx","className","onSubmit","async","event","preventDefault","formData","FormData","target","user","name","get","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","console","log","localStorage","setItem","token","err","htmlFor","type","id","required","style","color"],"sourceRoot":""}